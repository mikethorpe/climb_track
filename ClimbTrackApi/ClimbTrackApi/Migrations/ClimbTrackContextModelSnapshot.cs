// <auto-generated />
using System;
using ClimbTrackApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClimbTrackApi.Migrations
{
    [DbContext(typeof(ClimbTrackContext))]
    partial class ClimbTrackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ClimbTrackApi.Models.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExerciseId");

                    b.Property<int>("workoutID");

                    b.HasKey("ID");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("workoutID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ClimbTrackApi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("Reps");

                    b.Property<int>("Sets");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ClimbTrackApi.Models.Workout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("date");

                    b.Property<string>("name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("ClimbTrackApi.Models.Activity", b =>
                {
                    b.HasOne("ClimbTrackApi.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClimbTrackApi.Models.Workout", "workout")
                        .WithMany()
                        .HasForeignKey("workoutID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
