trigger:
- master
- dev

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)/ClimbTrackApi/*.sln'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/ClimbTrackApi/*.sln'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)/ClimbTrackApi/*.sln'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '-c release -o ClimbTrackApi'
    zipAfterPublish: false
    modifyOutputPath: false
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/ClimbTrackApi/ClimbTrackApi'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ClimbTrackApi$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ClimbTrackApi$(Build.BuildId).zip'
    ArtifactName: 'climbtrackclient-drop'
    publishLocation: 'Container'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'ClimbTrackClient'
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'ClimbTrackClient'
    customCommand: 'run build'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/ClimbTrackClient/build'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ClimbTrackClient$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ClimbTrackClient$(Build.BuildId).zip'
    ArtifactName: 'climbtrackclient-drop'
    publishLocation: 'Container'
